name: 'C++ CI'
on: 
  push:
    branches:
      - main
jobs:
  build_macos:
    runs-on: macos-latest
    permissions: write-all
    steps:
    # Проверка исходного кода
    - uses: actions/checkout@v3
      with:
        submodules: true

    # Установка и сборка
    - name: Configure CMake
      run: cmake . -DPATCH_VERSION=${{ github.run_number }} -DCMAKE_INSTALL_PREFIX=`pwd`/install
    - name: Build and Install
      run: cmake --build . --target install

    # Создание пакета
    - name: Package Application
      run: |
        cpack -G ZIP -B `pwd`/packages
        ls -lh ./packages

    # Запуск тестов
    - name: Run Tests
      run: ctest --output-on-failure || exit 1

    # Создание релиза
    - name: Create Release (MacOS)
      id: create_release_macos
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.run_number }}
        release_name: Release ${{ github.run_number }} (MacOS)
        draft: false
        prerelease: false

    # Загрузка артефакта релиза
    - name: Upload Release Asset (MacOS)
      id: upload_release_asset_macos
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release_macos.outputs.upload_url }}
        asset_path: ./packages/Course-project-${{ github.run_number }}-Darwin.zip
        asset_name: Course-project-${{ github.run_number }}-Darwin.zip
        asset_content_type: application/zip

  
  build_ubuntu:
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - run: cmake . -DPATCH_VERSION=${{ github.run_number }} -DCMAKE_INSTALL_PREFIX=`pwd`/install
      - run: cmake --build .
      - run: cmake --build . --target package
      - name: List files (ubuntu)
        run: ls
      - name: Create Release (ubuntu)
        id: create_release_ubuntu
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ubuntu${{ github.run_number }}
          release_name: Release ${{ github.run_number }} (ubuntu)
          draft: false
          prerelease: false 
      - name: Upload Release Asset (ubuntu)
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release_ubuntu.outputs.upload_url }}
          asset_path: ./Course-project${{ github.run_number }}-Linux.zip
          asset_name: Course-project${{ github.run_number }}-Linux.zip
          asset_content_type: application/zip